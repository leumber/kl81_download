#ifndef __USB_BULK
#define __USB_BULK
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
#define INVALID_USB_DEV		(-1001)
#define INVALID_USB_ENDPOINT	(-1002)
#define WRITE_LESS_DATA		(-1003)
#define INVALID_LEN		(-1004)
#define NO_DEVICE		(-1005)
#define OPEN_DEVICE_FAILED	(-1006)
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

/*============================================================
初始化USB设备
pendpoint：USB设备端点列表（不含控制端点）
counts：USB设备端点数（不含控制端点）
usb_timeout_ms：USB端点访问超时（单位mS）
返回值：初始化成功返回0，其他失败，失败码见上表
============================================================*/
int USBInit(int *pendpoint,int counts,int usb_timeout_ms);

/*============================================================
释放USB设备
返回值：成功返回0，其他失败，失败码见上表
============================================================*/
int USBRelease(void);

/*============================================================
向USB设备bulk端点写入数据
ep：USB设备目标端点
pbuf：待写入数据指针
size：待写入数据字节数
返回值：写入成功返回0，其他失败，失败码见上表
============================================================*/
int USBWriteToBulkEp(int ep,char *pbuf,int size);

/*============================================================
从USB设备bulk端点读取数据
ep：USB设备目标端点
pbuf：数据缓冲指针
size：in\OUT,输入数据缓冲大小，输出实际读取字节数
返回值：实际从端点读取数据字节数，小于0失败，失败码见上表
============================================================*/

int USBReadFromBulkEp(int ep,char *pbuf,int *buf_size);

/*============================================================
向USB设备interrupt端点写入数据
ep：USB设备目标端点
pbuf：待写入数据指针
size：待写入数据字节数
返回值：写入成功返回0，其他失败，失败码见上表
============================================================*/
int USBWriteToIntrEp(int ep,char *pbuf,int size);

/*============================================================
从USB设备interrupt端点读取数据
ep：USB设备目标端点
pbuf：数据缓冲指针
size：in\OUT,输入数据缓冲大小，输出实际读取字节数
返回值：实际从端点读取数据字节数，小于0失败，失败码见上表
============================================================*/
int USBReadFromIntrEp(int ep,char *pbuf,int *buf_size);

#endif

